
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.io.File;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Collections;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author javier
 */
public class ProcessExp extends javax.swing.JFrame {
    private Color color;
    TitledBorder diskBorder;
    
    DefaultTableModel model;
    
    private DateFormat df = new SimpleDateFormat("kk:mm:ss - dd/MM/yyyy");
    private boolean showGraphics = false;
    private boolean cnx = true;
    private int disk = 0;
    
    private double[][] diskGraph; //global
    private double[][] ramGraph; //global
    //Graphic position and size
    private int offset = 20; //global
    private int heigth = 110; //global     
    private int width = 160; //global
    
    /**
     * Creates new form ProcessExp
     */
    public ProcessExp(String so) {
        if(so.contains("win")){
            color = new Color(0,255,255);
        } else {
            color = new Color(204,0,0);
        }
        diskBorder = javax.swing.BorderFactory.createTitledBorder(new LineBorder(color, 2, true), "DISK:0", 3, 2, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 255, 255));
        initComponents();
        initDiskGraph();
        ramGraph = diskGraph.clone();
        initDiskGraph();
        
        model = (DefaultTableModel) jTable1.getModel();
        
        try {
            for (NetworkInterface iface : Collections.list(NetworkInterface.getNetworkInterfaces())) {
                if (iface.isUp()) {
                    jComboBox1.addItem(iface.getDisplayName());
                }
            }
        } catch (SocketException ex) {
            LogGen.error("SEVERO: " + ex);
        }
        
        jLabel6.setText(so);
        
        setSize(920,550);       
        setVisible(true);
        
        Timer timer = new Timer(1000, (ActionEvent e) -> {process();});
        timer.setInitialDelay(0);
        timer.start();
        
        Timer timer2 = new Timer(1000, (ActionEvent e) -> {conection();});
        timer2.setInitialDelay(0);
        timer2.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        draw = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        diskPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        dateText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        wifi = new javax.swing.JLabel();
        about = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ramPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 204));
        setIconImage(new ImageIcon("img/logo.png").getImage());

        draw.setBackground(new java.awt.Color(0, 0, 153));

        jPanel1.setBackground(new java.awt.Color(0, 51, 204));
        jPanel1.setBorder(new LineBorder(color, 2, true));
        jPanel1.setForeground(new java.awt.Color(0, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tarea", "PiD", "Estado", "RAM"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setBackground(new java.awt.Color(0, 51, 204));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 255, 255));
        jLabel2.setText("  Procesos");

        jTextField1.setBackground(new java.awt.Color(0, 51, 204));
        jTextField1.setForeground(new java.awt.Color(0, 255, 255));
        jTextField1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, color));

        jLabel7.setIcon(new ImageIcon("img/loupe.png"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        diskPanel.setBackground(new java.awt.Color(0, 51, 204));
        diskPanel.setBorder(diskBorder);
        diskPanel.setForeground(color);

        jLabel1.setBackground(new java.awt.Color(0, 51, 204));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 255, 255));
        jLabel1.setText("next ->");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout diskPanelLayout = new javax.swing.GroupLayout(diskPanel);
        diskPanel.setLayout(diskPanelLayout);
        diskPanelLayout.setHorizontalGroup(
            diskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, diskPanelLayout.createSequentialGroup()
                .addContainerGap(137, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        diskPanelLayout.setVerticalGroup(
            diskPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, diskPanelLayout.createSequentialGroup()
                .addContainerGap(121, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new ImageIcon("img/direccion-ip.png"));
        jLabel3.setText("   .   .   .");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        dateText.setEditable(false);
        dateText.setBackground(new java.awt.Color(0, 51, 204));
        dateText.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dateText.setForeground(new java.awt.Color(0, 255, 255));
        dateText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dateText.setText("date");

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 255, 255));
        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new ImageIcon("img/intranet.png"));
        jLabel5.setText("   .   .   .");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(color);
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("SO");

        wifi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        wifi.setForeground(new java.awt.Color(0, 255, 255));
        wifi.setIcon(new ImageIcon("img/wifi.png"));

        about.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        about.setForeground(new java.awt.Color(0, 255, 255));
        about.setIcon(new ImageIcon("img/question.png"));
        about.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aboutMouseClicked(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(0, 51, 204));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Process-Exp");
        jLabel4.setBorder(new LineBorder(color, 2, true));

        ramPanel.setBackground(new java.awt.Color(0, 51, 204));
        ramPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new LineBorder(color, 2, true), "RAM", 3, TitledBorder.BOTTOM, new java.awt.Font("Tahoma", 1, 11), new Color(0,255,255)));
        ramPanel.setForeground(new Color(0,255,255));

        javax.swing.GroupLayout ramPanelLayout = new javax.swing.GroupLayout(ramPanel);
        ramPanel.setLayout(ramPanelLayout);
        ramPanelLayout.setHorizontalGroup(
            ramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 189, Short.MAX_VALUE)
        );
        ramPanelLayout.setVerticalGroup(
            ramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 135, Short.MAX_VALUE)
        );

        dateText.setBorder(new LineBorder(color, 2, true));

        javax.swing.GroupLayout drawLayout = new javax.swing.GroupLayout(draw);
        draw.setLayout(drawLayout);
        drawLayout.setHorizontalGroup(
            drawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(drawLayout.createSequentialGroup()
                .addGap(402, 402, 402)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(drawLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(drawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(drawLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(183, 183, 183)
                        .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(188, 188, 188)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(drawLayout.createSequentialGroup()
                        .addGroup(drawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(drawLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(wifi)
                                .addGap(42, 42, 42)
                                .addComponent(about))
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(34, 34, 34)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(drawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ramPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(diskPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(366, 366, 366))
        );
        drawLayout.setVerticalGroup(
            drawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawLayout.createSequentialGroup()
                .addGroup(drawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(drawLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(drawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(drawLayout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addGroup(drawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(about)
                                    .addComponent(wifi))
                                .addGap(48, 48, 48)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(drawLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12))
                    .addGroup(drawLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(diskPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ramPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(drawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(drawLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(dateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, drawLayout.createSequentialGroup()
                        .addGroup(drawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(draw, javax.swing.GroupLayout.PREFERRED_SIZE, 912, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 310, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(draw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void initDiskGraph(){
        double w = (double)width/100;
        diskGraph = new double[100][2];
        for(int i = 0; i<100;i++){
            diskGraph[i][0] = heigth+offset;
            diskGraph[i][1] = (double)w*i+offset; //100px max-width
        }
    }
    
    /** 
    * Paints a graph in the specified component
    * @param panel JPanel where the graphic is drawn
    * @param positions array with the x-y coordinates of the graph 
    * @param mem new "x" position
    */
    private void paintGraphs(JPanel panel, double[][] positions, int mem){
        Graphics g = panel.getGraphics();        
        double h = heigth/100;
        double temp = positions[99][0];
        positions[99][0]= offset+heigth - h*mem; //100px max-heigth
        for(int i = 98; i>-1;i--){
            double dinTemp = positions[i][0];
            positions[i][0] = temp;
            temp = dinTemp;
        }
                
        int mark = (heigth/4+offset);
        g.clearRect(offset, offset, width, heigth);
        g.setColor(color);          
        
        g.drawLine(offset, offset, offset, heigth+offset);//y axis
        g.drawLine(offset, heigth+offset, width+offset, heigth+offset);//x axis
        g.drawLine(offset, (heigth/2+offset), 10+offset, (heigth/2+offset));//
        g.drawLine(offset, mark, 5+offset, mark);
        g.drawLine(offset, (heigth+offset)-(heigth/4), offset+5, heigth+offset-(heigth/4));
        g.drawString("100%",offset,offset);
        
        for(int i = 0; i<98;i++){
            g.drawLine( (int)positions[i][1],
                        (int)positions[i][0],
                        (int)positions[i+1][1],
                        (int)positions[i+1][0]);
        }
    }
    
    private void conection(){
        boolean c = new Resources().isConnected();
        if (c!=cnx){
            cnx = c;
            if(!c) {
                wifi.setIcon(new ImageIcon("img/no-wifi.png"));
                jLabel3.setText("   .   .   .");
                jLabel5.setText("   .   .   .");
            } else {wifi.setIcon(new ImageIcon("img/wifi.png"));}
        }
    }
    
    private void process(){
        dateText.setText(df.format(new Date()));
        paintGraphics();
        if(showGraphics) {getMemInfo();}
    }
    
    public void paintGraphics(){
        int h = 15;
        int h2 = 440;
        int sep = 20;
        int sep2=50;    

        Graphics g = draw.getGraphics();
        g.setColor(color);
        for(int i = 0; i<2;i++){
            int w,r;
            if(i==0){w=0;r=1;} else{w=-920;r=-1;}
            
            g.drawLine((0+w)*r, h, (100+w)*r, h);
            g.drawLine((100+w)*r, h, (130+w)*r, h+h);
            g.drawLine((130+w)*r, h+h, (280+w)*r, h+h);
            g.drawLine((280+w)*r, h+h, (310+w)*r, h);
            g.drawLine((310+w)*r, h, (460+w)*r, h);
 
            g.drawLine((0+w)*r, h+sep, (100+w)*r, h+sep);
            g.drawLine((100+w)*r, h+sep, (130+w)*r, h+h+sep);
            g.drawLine((130+w)*r, h+h+sep, (280+w)*r, h+h+sep);
            g.drawLine((280+w)*r, h+h+sep, (310+w)*r, h+h+h+sep);
            g.drawLine((310+w)*r, h+h+h+sep, (460+w)*r, h+h+h+sep);

            g.drawLine((0+w)*r,h2,(60+w)*r,h2);
            g.drawLine((60+w)*r,h2,(90+w)*r,h2+h);            
            g.drawLine((90+w)*r,h2+h,(200+w)*r,h2+h);      
            g.drawLine((200+w)*r,h2+h,(230+w)*r,h2+h*3);                
            g.drawLine((230+w)*r,h2+h*3,(280+w)*r,h2+h*3);              
            g.drawLine((280+w)*r,h2+h*3,(310+w)*r,h2+h);  
            g.drawLine((310+w)*r,h2+h,(460+w)*r,h2+h);

            g.drawLine((0+w)*r,h2+sep2,(200+w)*r,h2+sep2);      
            g.drawLine((200+w)*r,h2+sep2,(230+w)*r,h2+sep2+h);                
            g.drawLine((230+w)*r,h2+sep2-h,(280+w)*r,h2+sep2-h);              
            g.drawLine((280+w)*r,h2+sep2-h,(310+w)*r,h2+sep2+h);  
            g.drawLine((310+w)*r,h2+sep2+h,(460+w)*r,h2+sep2+h);

        }
    }     
    
    private void getMemInfo(){
        int perc = new Resources().getStorage(disk);
        paintGraphs(diskPanel, diskGraph, perc);
        
        perc = new Resources().getMemory();        
        paintGraphs(ramPanel, ramGraph, perc);
    }   
        
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void aboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aboutMouseClicked
        JOptionPane.showMessageDialog(this, "App: Connection\nv: 1.0\nAuthor: Javier Palacios\n", "Information",2, new ImageIcon("img/icon.png"));
    }//GEN-LAST:event_aboutMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        reapinterBug();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        int ac = jComboBox1.getSelectedIndex();
        String net = (String) jComboBox1.getSelectedItem();
        String intranet = "";
        int i = 0;
        try {
            for (NetworkInterface iface : Collections.list(NetworkInterface.getNetworkInterfaces())) {
                if (iface.isUp()) {
                    if(i==ac){
                        intranet = "   "+iface.getInterfaceAddresses().get(0).getAddress().toString().substring(1);
                    }
                    i++;
                }
            }
        } catch (SocketException ex) {
            LogGen.error("SEVERO: " + ex);
        }

        if(ac != 0){
            showGraphics = true;
            jLabel5.setText(intranet);
            jLabel3.setText("   "+GetIP.getPublicIP());
            String[] task = Cmd.runThr("tasklist.exe", 3, 20, "").split("\n");
            for(String row:task){
                String[] rowItem = row.split("\\s+");
                Object[] newRecord = {rowItem[0],rowItem[1],rowItem[2],rowItem[4]};
                model.addRow(newRecord);
            }
        } else {
            showGraphics = false;
            jLabel3.setText("   .   .   .");
            jLabel5.setText("   .   .   .");
            model.setRowCount(0);
            showGraphics = false;
            initDiskGraph();
            ramGraph = diskGraph.clone();
            diskPanel.repaint();
            ramPanel.repaint();
        }

        //       String[] paths = Cmd.runThr("powershell.exe ps | % {$_.Path}","").split("\n");
        ////       String path = Cmd.run("powershell.exe ps | %{if($_.path){(Get-ChildItem $_.path | select VersionInfo)}}");
        //       for(String path:paths){
            //        path = path.substring(path.lastIndexOf("\\")+1);
                //        System.out.println(path);
                //       }
            //
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void reapinterBug(){
        disk++;
        File[] file = File.listRoots();
        if (disk > file.length-1) {disk=0;}
        initDiskGraph();
        diskBorder.setTitle("DISK:"+disk);
        diskPanel.repaint();        
    } 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProcessExp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProcessExp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProcessExp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProcessExp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String OS = System.getProperty("os.name").toLowerCase();
                new ProcessExp(OS);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel about;
    private javax.swing.JTextField dateText;
    private javax.swing.JPanel diskPanel;
    private javax.swing.JPanel draw;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel ramPanel;
    private javax.swing.JLabel wifi;
    // End of variables declaration//GEN-END:variables
}
